name: Post Videos to Facebook

on:
  schedule:
    - cron: "0 10 * * *"  # daily at 10:00 UTC
  workflow_dispatch:

jobs:
  post:
    runs-on: ubuntu-latest

    steps:
      # ----------------- Checkout -----------------
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0  # full history needed for branch checkout

      # ----------------- Python Setup -----------------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      # ----------------- Google Service Account -----------------
      - name: Restore Google Service Account JSON
        run: |
          mkdir -p $HOME/.secrets
          echo "${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}" | base64 -d > $HOME/.secrets/credentials.json

      # ----------------- Run Video Poster -----------------
      - name: Run video poster bot
        env:
          FACEBOOK_PAGE_ACCESS_TOKEN: ${{ secrets.FACEBOOK_PAGE_ACCESS_TOKEN }}
          FACEBOOK_PAGE_ID: ${{ secrets.FACEBOOK_PAGE_ID }}
          GOOGLE_DRIVE_FOLDER_ID: ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}
        run: python main.py

      # ----------------- Commit Cache -----------------
      - name: Commit cache to video-cache branch
        run: |
          set -euo pipefail

          git config user.name github-actions
          git config user.email github-actions@github.com

          # Show current branch and posted_cache.json BEFORE branch switch
          echo "[DEBUG] workspace branch and posted_cache.json BEFORE switch"
          git rev-parse --abbrev-ref HEAD || true
          echo "[DEBUG] workspace posted_cache.json:"
          if [ -f posted_cache.json ]; then
            cat posted_cache.json
          else
            echo "(missing)"
          fi

          # Save workspace copy to temp (avoid being overwritten by checkout)
          if [ -f posted_cache.json ]; then
            cp posted_cache.json /tmp/posted_cache.json
          else
            echo '{"last_index": 0}' > /tmp/posted_cache.json
          fi

          # Ensure we have remote refs
          git fetch origin || true

          # If remote video-cache exists, checkout and reset to remote; otherwise create from current branch
          if git ls-remote --exit-code --heads origin video-cache; then
            git checkout video-cache
            git reset --hard origin/video-cache
          else
            # create video-cache from current branch (safe)
            git checkout -b video-cache
          fi

          echo "[DEBUG] Now on branch:"
          git rev-parse --abbrev-ref HEAD

          # Overwrite branch file with workspace copy
          cp -f /tmp/posted_cache.json posted_cache.json

          echo "[DEBUG] posted_cache.json in branch after copy:"
          cat posted_cache.json

          git add posted_cache.json

          if git diff --cached --quiet; then
            echo "[DEBUG] No changes to commit"
          else
            git commit -m "Update posted index"
            git push "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}" HEAD:video-cache
            echo "[DEBUG] pushed updated posted_cache.json to video-cache"
          fi
